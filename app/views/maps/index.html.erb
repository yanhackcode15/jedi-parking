<!DOCTYPE html>
<html> 

<head> 
  <meta http-equiv="content-type" content="text/html; charset=UTF-8" /> 
  <title>Jedi Parking</title> 
<!--  <script src="http://maps.google.com/maps/api/js" 
          type="text/javascript"></script>-->
  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAdjILRTW0vNbuC0cn4r30oFJh-HPaAOiU" type="text/javascript"></script>  
</head> 
<body>
  <div id="map"></div>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
  <script type="text/javascript">
    
    var json = (function () {
      var json = null;
      $.ajax({
        'async': false,
        'global': false,
        'url': "/meters",
        'dataType': "json",
        'success': function (data) {
            json = data;
        }
      });
      return json;
    })(); 

    // console.log(json[0]['longitude']);
    var locations = [];
    for(var i=0; i<json.length; i++){
    // for(var i=0; i<500; i++){
      var meter=[];
      meter[0]=json[i]['address'];
      meter[1]=json[i]['latitude'];
      meter[2]=json[i]['longitude'];
      meter[3]=json[i]['meter_id'];
      meter[4]=json[i]['event_type'];
      meter[5]=json[i]['event_time'];
      locations[i] = meter;   
    }

    map = initMap();
    // loadGeo();
    showDir(map);

    var id, target, options;
    
    options = {
      enableHighAccuracy: false,
      timeout: 5000,
      maximumAge: 0
    };
    target = {
      latitude : 0,
      longitude: 0
    };

    var watchId = navigator.geolocation.watchPosition(success, error, options);
    var infowindow = new google.maps.InfoWindow();
    var marker, i;

    for (i = 0; i < locations.length; i++) { 

      if (locations[i][4]=='SS'){
        marker = new google.maps.Marker({
          position: new google.maps.LatLng(locations[i][1], locations[i][2]),
          map: map,
          icon: {
            path: google.maps.SymbolPath.CIRCLE,
            scale: 5,
            fillColor: 'red',
            strokeColor: 'red',
            strokeWeight: 1,
            fillOpacity: 0.8
          }
        });
      } else { //if not taken or unknown, make it green
        marker = new google.maps.Marker({
          position: new google.maps.LatLng(locations[i][1], locations[i][2]),
          map: map,
          icon: {
            path: google.maps.SymbolPath.CIRCLE,
            scale: 5,
            fillColor: 'green',
            strokeColor: 'green',
            strokeWeight: 1,
            fillOpacity: 0.8
          }
        });
      }


      google.maps.event.addListener(marker, 'click', (function(marker, i) {
        return function() {
          infowindow.setContent(locations[i][0]);
          infowindow.open(map, marker);
        }
      })(marker, i));
    }


    function success(pos){
      var crd = pos.coords;
      marker = new google.maps.Marker({
        position: new google.maps.LatLng(crd.latitude, crd.longitude),
        map: map,
        icon: {
          path: google.maps.SymbolPath.CIRCLE,
          scale: 5,
          fillColor: 'blue',
          strokeColor: 'blue',
          strokeWeight: 2,
          fillOpacity: 0.8
        }
      });
    }
    
    function error(){
      console.warn('ERROR(' + err.code + '): ' + err.message);
    }

    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
      infoWindow.setPosition(pos);
      infoWindow.setContent(browserHasGeolocation ?
                            'Error: The Geolocation service failed.' :
                            'Error: Your browser doesn\'t support geolocation.');
    }

    function initMap() {
      var styles = [{"featureType":"landscape.natural","elementType":"geometry.fill","stylers":[{"visibility":"on"},{"color":"#e0efef"}]},{"featureType":"poi","elementType":"geometry.fill","stylers":[{"visibility":"on"},{"hue":"#1900ff"},{"color":"#c0e8e8"}]},{"featureType":"road","elementType":"geometry","stylers":[{"lightness":100},{"visibility":"simplified"}]},{"featureType":"road","elementType":"labels","stylers":[{"visibility":"on"}]},{"featureType":"transit.line","elementType":"geometry","stylers":[{"visibility":"on"},{"lightness":700}]},{"featureType":"water","elementType":"all","stylers":[{"color":"#7dcdcd"}]}];
      var styledMap = new google.maps.StyledMapType(styles,
      {name: "Styled Map"});
      var mapOptions = {
        zoom: 18,
        minZoom: 10,
        scaleControl: true,
        center: new google.maps.LatLng(34.024212, -118.496475),
        mapTypeControlOptions: {
          mapTypeIds: [google.maps.MapTypeId.ROADMAP, 'map_style']
        }
      };
      var map = new google.maps.Map(document.getElementById('map'), mapOptions);
      map.mapTypes.set('map_style', styledMap);
      map.setMapTypeId('map_style');
      return map;
    }

    function loadGeo(){     
      var infoWindow = new google.maps.InfoWindow({map: map});
        // Try HTML5 geolocation.
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
          var pos = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
          };
          infoWindow.setPosition(pos);
          infoWindow.setContent('You are here!');
          map.setCenter(pos);
        }, function() {
          handleLocationError(true, infoWindow, map.getCenter());
        });
      } else {
        // Browser doesn't support Geolocation
        handleLocationError(false, infoWindow, map.getCenter());
      }
    }

    function showDir(map){
      var directionsService = new google.maps.DirectionsService();
      var directionsDisplay = new google.maps.DirectionsRenderer;
      directionsDisplay.setMap(map);

      calcRoute();

      function calcRoute() {
        var start = "520 Broadway, Santa Monica, CA 90401"//{lat:, lng:};
        var end = "501 Wilshire Blvd, Santa Monica, CA 90403"//{lat:, lng:};
        var request = {
          origin:start,
          destination:end,
          travelMode: google.maps.TravelMode.DRIVING
        };
        directionsService.route(request, function(result, status) {
          if (status == google.maps.DirectionsStatus.OK) {
            directionsDisplay.setDirections(result);
          }
        });
      }
    }
      
  </script>

</body>
</html>